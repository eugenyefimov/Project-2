AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless Task Management API

Resources:
  # DynamoDB Table
  TasksTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Tasks
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  # Lambda Functions
  GetTasksFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: getTasks.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 30
      Environment:
        Variables:
          TASKS_TABLE: !Ref TasksTable
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref TasksTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /tasks
            Method: get
      Tracing: Active

  GetTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: getTask.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 30
      Environment:
        Variables:
          TASKS_TABLE: !Ref TasksTable
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref TasksTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /tasks/{id}
            Method: get
      Tracing: Active

  CreateTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: createTask.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 30
      Environment:
        Variables:
          TASKS_TABLE: !Ref TasksTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TasksTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /tasks
            Method: post
      Tracing: Active

  UpdateTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: updateTask.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 30
      Environment:
        Variables:
          TASKS_TABLE: !Ref TasksTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TasksTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /tasks/{id}
            Method: put
      Tracing: Active

  DeleteTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: deleteTask.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 30
      Environment:
        Variables:
          TASKS_TABLE: !Ref TasksTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TasksTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /tasks/{id}
            Method: delete
      Tracing: Active

  # CloudWatch Alarms
  ApiGateway5xxErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: ApiGateway5xxErrors
      AlarmDescription: Alarm if API Gateway has too many 5xx errors
      MetricName: 5XXError
      Namespace: AWS/ApiGateway
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 5
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      Dimensions:
        - Name: ApiName
          Value: !Ref ServerlessRestApi

  LambdaErrorsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: LambdaErrors
      AlarmDescription: Alarm if Lambda functions have too many errors
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 3
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  TasksTable:
    Description: "DynamoDB Tasks table"
    Value: !Ref TasksTable
